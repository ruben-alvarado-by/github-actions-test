name: Grafana and Prometheus Deployment
on:
  push:
    branches: [main]
    paths:
      - '.github/workflows/**'
  pull_request:
    branches: [main]
    paths:
      - '.github/workflows/**'

jobs:
  # test:
  #   ...
  deploy:
    name: "Deploy to VM"
    runs-on: ubuntu-latest
    # if: github.event_name == 'push' && github.ref == 'refs/heads/master'

    steps:
      # - name: Azure Login
      #   uses: azure/login@v1
      #   with:
      #     creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/prometheusvm.key
          chmod 600 ~/.ssh/prometheusvm.key
          cat >>~/.ssh/config <<END
          Host prometheusvm
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/prometheusvm.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}

      # - name: Clone 
      #   run: ssh prometheusvm 'git clone git@github.com:BY-Product-Development/exec-ecom-azure-infrastructure.git'
      - name: Checkout Code
        run: |
          ssh prometheusvm '
            DIR=/home/azureuser/exec-ecom-azure-infrastructure
            if [ -d "$DIR" ];
            then
                cd $DIR
                git checkout ecom-10835-Prometheus-metrics
                git pull 
                echo "$DIR directory exists."
            else
              git clone git@github.com:BY-Product-Development/exec-ecom-azure-infrastructure.git
              git checkout ecom-10835-Prometheus-metrics
            fi
          '
          
          
      - name: Check Dev Folder
        run: |
          ssh prometheusvm '
            DIR=/prometheus-storage/dev
            if [ ! -d "$DIR" ];
            then
              mkdir -p "$DIR"
              sudo chown -R azureuser:azureuser "$DIR"
            else
              echo "$DIR already exists"
            fi
          '
      - name: Check Stg Folder
        run: |
          ssh prometheusvm '
            DIR=/prometheus-storage/stg
            if [ ! -d "$DIR" ];
            then
              mkdir -p "$DIR"
              sudo chown -R azureuser:azureuser "$DIR"
            else
              echo "$DIR already exists"
            fi
          '
      - name: Check prd Folder
        run: |
          ssh prometheusvm '
            DIR=/prometheus-storage/prd
            if [ ! -d "$DIR" ];
            then
              mkdir -p "$DIR"
              sudo chown -R azureuser:azureuser "$DIR"
            else
              echo "$DIR already exists"
            fi
          '
      - name: Check psr Folder
        run: |
          ssh prometheusvm '
            DIR=/prometheus-storage/psr_eus2
            if [ ! -d "$DIR" ];
            then
              mkdir -p "$DIR"
              sudo chown -R azureuser:azureuser "$DIR"
            else
              echo "$DIR already exists"
            fi
          '
      - name: Check prd-euw Folder
        run: |
          ssh prometheusvm '
            DIR=/prometheus-storage/prd-euw
            if [ ! -d "$DIR" ];
            then
              mkdir -p "$DIR"
              sudo chown -R azureuser:azureuser "$DIR"
            else
              echo "$DIR already exists"
            fi
          '
      - name: Check grafana data Folder
        run: |
          ssh prometheusvm '
            DIR=/prometheus/grafana
            if [ ! -d "$DIR" ];
            then
              mkdir -p "$DIR"
              sudo chown -R 472:472 "$DIR"
            else
              echo "$DIR already exists"
            fi
          '
      - name: Check grafana config Folder
        run: |
          ssh prometheusvm '
            DIR=/prometheus/etc
            if [ ! -d "$DIR" ];
            then
              mkdir -p "$DIR"
              sudo chown -R 472:472 "$DIR"
            else
              echo "$DIR already exists"
            fi
          '
      - name: Deploy Docker-Compose 
        run: |
            ssh prometheusvm '
              DIR=/home/azureuser/exec-ecom-azure-infrastructure/grafana-prometheus/global-prometheus
              cd "$DIR"
              docker ps -a
              docker-compose up --build -d  
            '

      # - name: Start the server
      #   if: ${{ always() }}
      #   run: ssh prometheusvm 'sudo systemctl start my-application'
# name: Actions Workflow
# on: 
#   # schedule:
#   #   - cron: "0/5 * * * *"
#   #   - cron: "0/6 * * * *"
#   #push:
#   repository_dispatch:
#     types: 
#       - build
#   pull_request:
#     types:
#       - closed
#       - assigned
#       - opened
#       - reopened
# jobs:
#   run-github-Actions:
#     runs-on: ubuntu-latest
#     steps:
#       - name: payload
#         run: echo ${{ github.event.client_payload.env}}
#       - name: List Files
#         run: |
#           pwd 
#           echo "--------------"
#           ls -a
#           echo $GITHUB_SHA
#           echo $GITHUB_REPOSITORY
#           echo $GITHUB_WORKSPACE 
#           echo "${{ github.token }}"
#           # git clone git@github:$GITHUB_REPOSITORY
#           # git checkout $GITHUB_SHA
#       - name: Checkout
#         uses: actions/checkout@v1
#       - name: List Files after checkout
#         run: |
#           pwd 
#           echo "--------------"
#           ls -a
#       - name: simple JS Actions
#         id: greet
#         uses: actions/hello-world-javascript-action@v1
#         with:
#           who-to-greet: Rubencito
#       - name: Log greeting time xxx
#         run: echo "${{ steps.greet.outputs.time }}" 